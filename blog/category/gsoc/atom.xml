<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Blog - Posts in GSoC</title>
  <id>https://duygukeskek.github.io/sunpy-website/blog.html/blog/category/gsoc/atom.xml</id>
  <updated>2017-08-16T00:00:00Z</updated>
  <link href="https://duygukeskek.github.io/sunpy-website/blog.html" />
  <link href="https://duygukeskek.github.io/sunpy-website/blog.html/blog/category/gsoc/atom.xml" rel="self" />
  <generator uri="http://ablog.readthedocs.org" version="0.8.4">ABlog</generator>
  <entry xml:base="https://duygukeskek.github.io/sunpy-website/blog.html/blog/category/gsoc/atom.xml">
    <title type="text">Sunpy Website Improvements</title>
    <id>https://duygukeskek.github.io/sunpy-website/blog.html/posts/2017/2017-08-16-sunpy-website-improvements.html</id>
    <updated>2017-08-16T00:00:00Z</updated>
    <published>2017-08-16T00:00:00Z</published>
    <link href="https://duygukeskek.github.io/sunpy-website/blog.html/posts/2017/2017-08-16-sunpy-website-improvements.html" />
    <author>
      <name>Duygu KESKEK</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;sunpy-website-improvements&quot;&gt;

&lt;p&gt;Believe or not, there is only one week left to the end of GSoC ! The whole GSoC period became an unforgettable experience for me. I still remember the first time I read the documentation of Sphinx and say ‚ÄúWhat the hell am I supposed to do now ?‚Äù&lt;/p&gt;
&lt;p&gt;The old SunPy website was a Ruby based Jekyll static website and it wasn‚Äôt consistent with the documentation theme. The main aspect of the project is to remove the inconsistency between the website and the docs while improving UI/UX. There are also 4 extensions of the project&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;Implementing a registry of SunPy Affiliated packages&lt;/li&gt;
&lt;li&gt;Move away from Jekyll to a Python based static site generator&lt;/li&gt;
&lt;li&gt;Write a sphinx extension that maintains an up to date list on the main website of the instruments and data products supported by the SunPy library&lt;/li&gt;
&lt;li&gt;Improve the content of the SunPy website&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In my proposal, I mentioned that I‚Äôll implement all the extensions and at the end of the GSoC, I can say that I‚Äôm done with all except the Sphinx extension. -Mentors also didn‚Äôt force me to do that since there was more important and never-ending issues on the list.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;first-month&quot;&gt;
&lt;h2&gt;First Month&lt;/h2&gt;
&lt;p&gt;At the first month of the project, I spent almost 1 week to understand Sphinx and read its documentation. This was the first time I heard about Sphinx and it was quite exciting to learn something new. The challenge of my project was to create both the website and the docs using Sphinx. This was discussed on Matrix channel, and even seemed impossible for some since there is always a risk that the website and the docs may break each other. Also, using Sphinx for a website theme was so RARE ! I was sometimes like ‚ÄúCome on! It‚Äôs a docs generator ?!‚Äù&lt;/p&gt;
&lt;p&gt;I used &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ryan-roemer/sphinx-bootstrap-theme&quot;&gt;sphinx-bootstrap-theme&lt;/a&gt; as a basis of my project. I started implementing the navbar sections and put all the content in the new website. Sphinx uses restructuredText as its markup language and I used RST for the entire website. I added a scrolling sidebar for navigation between headlines. At the end of the first month, the structure of the website was nicely prepared for revisions and improvements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;second-month&quot;&gt;
&lt;h2&gt;Second Month&lt;/h2&gt;
&lt;p&gt;The second month, I started to work on the blog section and used &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/abakan/ablog&quot;&gt;Ablog&lt;/a&gt; . However, the struggle was real, Ablog was full of bugs and it was the only option for blogging with Sphinx. Then, my mentors fixed the Ablog and did the magic. After that, I implemented the blogging system and made it possible for someone to write their own blog posts easily. Additionally, I integrated &lt;a class=&quot;reference external&quot; href=&quot;https://disqus.com/&quot;&gt;DISQUS&lt;/a&gt; to the blog and enabled commenting on the posts. At the end of the 2nd month, I made a lot of meetings with my mentors and started to work on the documentation theme.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;final-month&quot;&gt;
&lt;h2&gt;Final Month&lt;/h2&gt;
&lt;p&gt;The final month of GSoC was the most painful one for me :P At the beginning, mentors helped me to build the current SunPy documentation theme (It took 3 days to achieve that ^^) and use our new &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/sunpy/sunpy-sphinx-theme&quot;&gt;SunPy Sphinx theme&lt;/a&gt; for the docs. After that, they opened issues on the theme repo (Have a look at this never-ending &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/sunpy/sunpy-sphinx-theme/issues&quot;&gt;issue list&lt;/a&gt; üòÖ) and I fixed them one by one. The worst part of working on the docs is the build time ! It takes averagely 10 min to build after a simple change üò† By time, I got used to this also ^^ I redesigned every component of the docs and made them consistent. There was a huge color mismatch and also lots of bugs, and I‚Äôm done with all and my mentors appreciate the work. I‚Äôm also really happy with the docs theme. Now, there are just some minor issues and the renovated website will be replaced with the good old Jekyll one before the SunPy 0.8 release ^^ I‚Äôm really exciting for the day that everyone will see the new website with the release and get some feedbacks on it :) In the near end of the GSoC, I can comfortably say that it makes me feel really happy to work on an open source project. I want to contribute to the website after the GSoC ends and see how it will improve even better by time.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://duygukeskek.github.io/sunpy-website/blog.html/blog/category/gsoc/atom.xml">
    <title type="text">2nd year of SunPy participating in GSOC</title>
    <id>https://duygukeskek.github.io/sunpy-website/blog.html/posts/2014/2014-04-28-gsoc-4-students.html</id>
    <updated>2014-04-28T00:00:00Z</updated>
    <published>2014-04-28T00:00:00Z</published>
    <link href="https://duygukeskek.github.io/sunpy-website/blog.html/posts/2014/2014-04-28-gsoc-4-students.html" />
    <author>
      <name>David P√©rez-Su√°rez</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;nd-year-of-sunpy-participating-in-gsoc&quot;&gt;

&lt;p&gt;Wonderful news for SunPy!
This year is the &lt;a class=&quot;reference external&quot; href=&quot;https://www.google-melange.com/gsoc/homepage/google/gsoc2014&quot;&gt;10th edition of Google Summer of Code&lt;/a&gt;, and SunPy is participating again for the second year in a row!
Remember how awesome it was last year when we got two amazing students?
Well, this year is going to be twice as awesome!
Why?
Because SunPy has gotten twice as many students than in 2013.
Let‚Äôs introduce them and their projects:&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/VaticanCameos&quot;&gt;Pritish Chakraborty&lt;/a&gt; (a.k.a. VaticanCameos) a Computer Science student from Haryana (India) will be working on giving SunPy a proper coordinate transformation system integrated with the developments in &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/astropy/astropy-APEs/blob/master/APE5.rst&quot;&gt;Astropy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/rajul-iitkgp&quot;&gt;Rajul Srivastava&lt;/a&gt; (a.k.a. rajul), a science student working towards a major in chemistry in Kharagpur (India),
is going to bring a GUI interface to SunPy.
This GUI is going to be based in &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ejeschke/ginga&quot;&gt;Ginga&lt;/a&gt; and the SunPy file database funcionality.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/gunner272&quot;&gt;Rishabh Sharma&lt;/a&gt; (a.k.a. gunner272), who is currently pursuing a Computer Science and Engineering degree at Hyderabad (India), will be working on refractoring the lightcurve module, making it more consistant with the way Map works at the moment.
This project will also make use of Astropy development, in particular to the &lt;a class=&quot;reference external&quot; href=&quot;https://docs.astropy.org/en/stable/table/index.html&quot;&gt;data tables module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Last but not least, &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/kaichogami&quot;&gt;Asish Panda&lt;/a&gt; .
Asish is doing a degree in electronics and telecommunications at Bhubaneswar (India).
He will be working on the integration of &lt;a class=&quot;reference external&quot; href=&quot;https://docs.astropy.org/en/stable/units/index.html&quot;&gt;Astropy‚Äôs Quantity objects&lt;/a&gt; into SunPy and work towards the replacement of the actual sunpy.wcs with the &lt;a class=&quot;reference external&quot; href=&quot;https://docs.astropy.org/en/stable/wcs/index.html&quot;&gt;astropy.wcs&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Don‚Äôt forget to check the student‚Äôs blogs:
&lt;a class=&quot;reference external&quot; href=&quot;http://thejoyofpython.wordpress.com/&quot;&gt;Pritish&lt;/a&gt; ,
&lt;a class=&quot;reference external&quot; href=&quot;http://pettycoder.blogspot.in&quot;&gt;Rajul&lt;/a&gt; ,
&lt;a class=&quot;reference external&quot; href=&quot;http://rishabhsharmagunner.wordpress.com/&quot;&gt;Rishabh&lt;/a&gt; and
&lt;a class=&quot;reference external&quot; href=&quot;http://sunpygsoc.wordpress.com/&quot;&gt;Asish&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;to keep up to date with their progress during this summer and don‚Äôt be afraid to comment on their posts with words of support.
Nevertheless, they will have also the opportunity to write some feature posts here to keep all of us updated.&lt;/p&gt;
&lt;p&gt;Once more, this year GSOC would not have been possible without the help that the &lt;a class=&quot;reference external&quot; href=&quot;https://wiki.python.org/moin/SummerOfCode/2014&quot;&gt;Python Software Foundation&lt;/a&gt; have given us, as we are participating under their umbrella.
Thanks PSF!
In particular their organisers &lt;a class=&quot;reference external&quot; href=&quot;http://terri.zone12.com/&quot;&gt;Terri&lt;/a&gt; , Meflin and Florian.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://duygukeskek.github.io/sunpy-website/blog.html/blog/category/gsoc/atom.xml">
    <title type="text">The Database class</title>
    <id>https://duygukeskek.github.io/sunpy-website/blog.html/posts/2013/2013-06-19-database-class.html</id>
    <updated>2013-06-19T00:00:00Z</updated>
    <published>2013-06-19T00:00:00Z</published>
    <link href="https://duygukeskek.github.io/sunpy-website/blog.html/posts/2013/2013-06-19-database-class.html" />
    <author>
      <name>Simon Liedtke</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;the-database-class&quot;&gt;

&lt;p&gt;Note: I have also a private blog which covers more advanced topics.
The next post there will be about implementing custom caches and custom commands.&lt;/p&gt;
&lt;p&gt;The class Database is the central class of the new database package.
It is used to connect to a database and to manipulate it (adding new entries, editing exisitng entries, removing entries).
Later on, it will also be possible to search for entries by specific criteria (I think about using the sunpy.net.vso.attrs module for querying the database).&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;connecting-adding-entries-getting-all-entries-and-checking-for-existence&quot;&gt;
&lt;h2&gt;Connecting, adding entries, getting all entries and checking for existence&lt;/h2&gt;
&lt;p&gt;To connect to a database, you create a new instance of the class Database.
Its __init__ method receives only one positional argument: the URL.
You may either pass a string of the form dialect+driver://user:password&amp;#64;host/dbname[?key=value..] or an instance of the class sqlalchemy.engine.url.URL.
The special string ‚Äòsqlite:///:memory:‚Äô means that an in-memory SQLite database is used (which is especially handy in interactive session for trying things out).
See sqlalchemy.create_engine for more information about the syntax of the passed string.&lt;/p&gt;
&lt;p&gt;The method create_tables is mandatory for working with a new database.
Missing tables are not automatically created because ‚Äúexplicit is better than implicit‚Äù.&lt;/p&gt;
&lt;p&gt;Each instance of the class DatabaseEntry represents one row in the database.
To add a new entry to the database, simply use the add method of a database object and pass it the entry you want to add.
To check if it exists in the database, you can use the in operator.
The number of entries can be accessed by using the len() function on any database object.
It is also supported to iterate over a database object to get all entries.
As a side-effect, using the list() function on a database object gives you a list of all entries.&lt;/p&gt;
&lt;div class=&quot;highlight-default&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sunpy.database&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DatabaseEntry&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;sqlite:///:memory:&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_tables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DatabaseEntry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DatabaseEntry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry1&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry2&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DatabaseEntry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileid&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DatabaseEntry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileid&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;when-are-changes-committed-to-the-database&quot;&gt;
&lt;h2&gt;When are changes committed to the database?&lt;/h2&gt;
&lt;p&gt;There are two answers to this question: Changes may either be committed explicitly or implicitly.
The explicit way is easy: any number of database manipulations is flushed by calling the commit method, i.e. &lt;cite&gt;database.commit()&lt;/cite&gt; if the name of the Database instance is called database.&lt;/p&gt;
&lt;p&gt;The implicit way is a bit harder to understand: Changes are implicitly committed directly before a command reads from the database.&lt;/p&gt;
&lt;p&gt;Each of the following commands is committed as soon as a query to the database is issued:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;add&lt;/li&gt;
&lt;li&gt;edit&lt;/li&gt;
&lt;li&gt;remove&lt;/li&gt;
&lt;li&gt;star&lt;/li&gt;
&lt;li&gt;unstar&lt;/li&gt;
&lt;li&gt;undo / redo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By ‚Äúquery‚Äù I mean any function, method or operator that reads from the database.
These are in particular:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;cite&gt;list(database)&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;len(database)&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;database.get_entry_by_id&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;database.get_starred&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;the &lt;cite&gt;in&lt;/cite&gt; operator&lt;/li&gt;
&lt;li&gt;iterating over a database&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You don‚Äôt have to remember each of these functions.
Just keep in mind that changes to the database are committed as soon as any operation is performed to read from the database.
Later on, more methods and features will be added to read from the database, so that generic rule is more useful than learning a list of operations by heart.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;undoing-and-redoing-actions-also-removing-entries&quot;&gt;
&lt;h2&gt;Undoing and redoing actions (also: removing entries)&lt;/h2&gt;
&lt;p&gt;The actions &lt;cite&gt;add&lt;/cite&gt;, &lt;cite&gt;edit&lt;/cite&gt;, &lt;cite&gt;remove&lt;/cite&gt;, &lt;cite&gt;star&lt;/cite&gt;, and &lt;cite&gt;unstar&lt;/cite&gt; can be undone and redone using the methods undo or redo, respectively.
Both of these methods receive an optional argument to specify the number of commands that should be undone or redone (the default is 1, i.e. undo or redo only one command).
If the given number of commands cannot be reverted (e.g. if only 2 actions have been undone, it is not possible to redo 5 actions), an exception is raised.&lt;/p&gt;
&lt;p&gt;The &lt;cite&gt;remove&lt;/cite&gt; method is as simple as the &lt;cite&gt;add&lt;/cite&gt; method: you pass an entry and it gets removed.&lt;/p&gt;
&lt;div class=&quot;highlight-default&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;undo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[&amp;lt;DatabaseEntry(id 1, data provider None, fileid None)&amp;gt;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &amp;lt;DatabaseEntry(id 2, data provider None, fileid None)&amp;gt;]&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;redo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[&amp;lt;DatabaseEntry(id 2, data provider None, fileid None)&amp;gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;editing-entries-un-starring-entries-and-custom-edits&quot;&gt;
&lt;h2&gt;Editing entries: (un-)starring entries and custom edits&lt;/h2&gt;
&lt;p&gt;The database package brings the new concept of starring entries.
This is just to mark certain entries, it is not a ranking or a custom label (though while I‚Äôm writing this, I think that could be a good idea.
I should discuss it with the SunPy devs).
To star an entry, call the method star and pass the entry to be starred.
The method unstar works accordingly.
If you try to mark an entry as starred although it already is, an exception is raised.
An exception is also raised if it is attempted to unstar an entry that is not starred.
This ‚Äúverbose‚Äù behaviour can be turned off by setting the optional keyword argument &lt;cite&gt;ignore_already_starred&lt;/cite&gt; (or &lt;cite&gt;ignore_already_unstarred&lt;/cite&gt; for the &lt;cite&gt;unstar&lt;/cite&gt; method) to True.
The entry method makes it possible to change a specific value of an entry.
The first argument is the entry to be changed and all following arguments must be keyword arguments where the key represents the column name in the database and the value represents the new value.&lt;/p&gt;
&lt;div class=&quot;highlight-default&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;star&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_starred&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;&amp;lt;generator object &amp;lt;genexpr&amp;gt; at 0xb54d734&amp;gt;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_starred&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[&amp;lt;DatabaseEntry(id 2, data provider None, fileid None)&amp;gt;]&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unstar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_starred&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starred&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_starred&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[&amp;lt;DatabaseEntry(id 42, data provider None, fileid None)&amp;gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;caching&quot;&gt;
&lt;h2&gt;Caching&lt;/h2&gt;
&lt;p&gt;The database may be used as a cache.
In fact, a cache is always used, but the default size is &lt;cite&gt;float(‚Äòinf‚Äô)&lt;/cite&gt;, meaning infinite size.
There are different possible types of caches and they mainly differ in the way what items they remove if the cache has reached the full size and another item is added.
The default cache is an LRU (Least Recently Used) cache.
This one removes the item where the access time is the oldest.
There is also one other builtin cache, the LFU (Least Frequently Used) cache.
This one removes the entry where the number of accesses is the lowest.
It is also possible to add custom cache algorithms, this will be covered in one of the next posts in my private blog.&lt;/p&gt;
&lt;p&gt;The cache type is the second argument, defaulting to sunpy.database.caching.LRUCache.
The cache size of a database is specified by passing the keyword argument cache_size in the &lt;cite&gt;__init__&lt;/cite&gt; method.
To get an entry by its unique ID, you use the method &lt;cite&gt;get_entry_by_id&lt;/cite&gt;.
In the following example, you can see (at least I hope you do ^^) that the entries #1 and #3 have been accessed once, whereas #2 has not been accessed at all.
So you could imagine that its last accessed time is minus infinity and therefore it gets removed when entry #4 is added to the database.&lt;/p&gt;
&lt;div class=&quot;highlight-default&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pprint&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pprint&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;sqlite:///:memory:&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_tables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DatabaseEntry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DatabaseEntry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DatabaseEntry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DatabaseEntry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[&amp;lt;DatabaseEntry(id 1, data provider None, fileid None)&amp;gt;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &amp;lt;DatabaseEntry(id 2, data provider None, fileid None)&amp;gt;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &amp;lt;DatabaseEntry(id 3, data provider None, fileid None)&amp;gt;]&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_entry_by_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;&amp;lt;DatabaseEntry(id 1, data provider None, fileid None)&amp;gt;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_entry_by_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;&amp;lt;DatabaseEntry(id 3, data provider None, fileid None)&amp;gt;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[&amp;lt;DatabaseEntry(id 1, data provider None, fileid None)&amp;gt;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &amp;lt;DatabaseEntry(id 3, data provider None, fileid None)&amp;gt;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &amp;lt;DatabaseEntry(id 4, data provider None, fileid None)&amp;gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-are-the-next-plans&quot;&gt;
&lt;h2&gt;What are the next plans?&lt;/h2&gt;
&lt;p&gt;The next big plans are writing actual tables (the current DatabaseEntry class can be seen as a dummy model for now), support querying and adding a connection to the VSO interface so that downloaded data gets automatically added to the database.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://duygukeskek.github.io/sunpy-website/blog.html/blog/category/gsoc/atom.xml">
    <title type="text">Gsoc Community Bonding</title>
    <id>https://duygukeskek.github.io/sunpy-website/blog.html/posts/2013/2013-05-28-gsoc-community-bonding.html</id>
    <updated>2013-05-28T00:00:00Z</updated>
    <published>2013-05-28T00:00:00Z</published>
    <link href="https://duygukeskek.github.io/sunpy-website/blog.html/posts/2013/2013-05-28-gsoc-community-bonding.html" />
    <author>
      <name>David P√©rez-Su√°rez</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;gsoc-community-bonding&quot;&gt;

&lt;p&gt;From our last post you may remember that SunPy is participating in GSOC-2013 under the PSF &amp;lt;&lt;a class=&quot;reference external&quot; href=&quot;http://wiki.python.org/moin/SummerOfCode/2013&quot;&gt;http://wiki.python.org/moin/SummerOfCode/2013&lt;/a&gt;&amp;gt;`_ (!=
&lt;a class=&quot;reference external&quot; href=&quot;http://en.wikipedia.org/wiki/Point_spread_function&quot;&gt;Point Spread Function&lt;/a&gt;.
Yesterday, Google announced the accepted candidates for their summer of code.
If you look the &lt;a class=&quot;reference external&quot; href=&quot;http://www.google-melange.com/gsoc/projects/list/google/gsoc2013&quot;&gt;list&lt;/a&gt; you will find between all these students that there are two whose projects is to work with SunPy.&lt;/p&gt;
&lt;p&gt;Simon Liedtke (a.k.a. derdon) will develop a database for downloaded solar data, this will allow SunPy users to interact with the data in a more efficient way, avoiding to have to download again and again the files that went lost in our hard-disk.
This tool will be smart enough that will let you know if you query data to &lt;a class=&quot;reference external&quot; href=&quot;http://virtualsolar.org/&quot;&gt;VSO&lt;/a&gt; that you have already downloaded.&lt;/p&gt;
&lt;p&gt;Michael Malocha (a.k.a. mjm159) is going to work on a better integration of &lt;a class=&quot;reference external&quot; href=&quot;http://www.lmsal.com/hek/&quot;&gt;HEK&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;http://www.helio-vo.eu/&quot;&gt;HELIO&lt;/a&gt; in SunPy.
This will include querying for event to the available catalogues, but also other capabilities like overploting the events‚Äô positions/contours into solar images.&lt;/p&gt;
&lt;p&gt;They will start to work in their projects in just two weeks.
You will be able to follow their adventures, feelings, ideas, etc. in their personal blogs (&lt;a class=&quot;reference external&quot; href=&quot;http://mjm159.wordpress.com/&quot;&gt;Michael‚Äôs&lt;/a&gt; , &lt;a class=&quot;reference external&quot; href=&quot;http://derdon.github.io/blog/&quot;&gt;Simon‚Äôs&lt;/a&gt; ).
But they will also give us  a bi-weekly update on their progress in here! Keep an eye on them because we want your inputs to develop the best tools we can!&lt;/p&gt;
&lt;p&gt;Meanwhile, we are in the &lt;a class=&quot;reference external&quot; href=&quot;http://googlesummerofcode.blogspot.fi/2007/04/so-what-is-this-community-bonding-all.html&quot;&gt;Community Bonding Period&lt;/a&gt;.
In this two weeks, Michael and Simon will have to interact with us, to know how we work, to read documents needed for their projects, so on and so on‚Ä¶ On the mentor‚Äôs side we are going to work in a couple of wiki-documents to give them a better insight on how we would like to use their implemented tools at the end of the summer.
Check the &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/sunpy/sunpy/wiki/Gsoc-2013-use-cases&quot;&gt;wiki&lt;/a&gt; and feel free to contribute!&lt;/p&gt;
&lt;p&gt;This summer is going to be AMAZING for SunPy, so don‚Äôt doubt to join us for the fun!&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://duygukeskek.github.io/sunpy-website/blog.html/blog/category/gsoc/atom.xml">
    <title type="text">Google Summer of Code</title>
    <id>https://duygukeskek.github.io/sunpy-website/blog.html/posts/2013/2013-04-09-gsoc.html</id>
    <updated>2013-04-09T00:00:00Z</updated>
    <published>2013-04-09T00:00:00Z</published>
    <link href="https://duygukeskek.github.io/sunpy-website/blog.html/posts/2013/2013-04-09-gsoc.html" />
    <author>
      <name>Stuart Mumford</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;google-summer-of-code&quot;&gt;

&lt;p&gt;SunPy is participating in the &lt;a class=&quot;reference external&quot; href=&quot;http://http//www.google-melange.com/gsoc/homepage/google/gsoc2013&quot;&gt;Google Summer of Code 2013&lt;/a&gt; under the umbrella of the &lt;a class=&quot;reference external&quot; href=&quot;http://wiki.python.org/moin/SummerOfCode/2013&quot;&gt;Python Software Foundation&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;We have participated succefully in the ESA summer of code in space project which is similar to GSoC for the last two years. Both our students and our project have gained a lot from the experience. A list of project ideas and application info is on our &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/sunpy/sunpy/wiki/Google-Summer-of-Code&quot;&gt;GitHub Wiki&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;If you are interested in talking to us about projects, applications or if you are just bored pop into our IRC channel #SunPy on
&lt;a class=&quot;reference external&quot; href=&quot;http://www.sunpy.org/blog/irc.freenode.net&quot;&gt;irc.freenode.net&lt;/a&gt; or drop us a line on our &lt;a class=&quot;reference external&quot; href=&quot;https://groups.google.com/forum/#!forum/sunpy&quot;&gt;mailing list&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Enjoy your summer of code!&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>
